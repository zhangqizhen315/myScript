创建服务配置

通过 [ 服务引擎 ] -- [ 服务配置 ] 页面可以创建服务配置.

在 [ 服务配置 ] 页面, 点击 [ 创建按钮 ] 弹出 [ 操作提示 ] 弹窗, 在 [ 操作提示 ] 弹窗中, 选择要创建配置的 [ 动作代理 ]. 点击 [ 确定 ] 按钮, 弹出 [ 服务配置设置 ] 弹窗. [ 服务配置设置 ] 弹窗左侧是服务配置的基本信息; 右侧是服务配置的用户配置. 

服务配置的基本信息包括: 
配置名称: 配置的名字, 用于标识配置
配置分类: 配置的分类, 用于对配置进行快速筛选
服务组件: 创建配置的代理所属的服务组件. 该项不可编辑
组件版本: 创建配置的代理所属的服务组件的版本. 该项不可编辑
服务代理: 创建配置的代理. 该项不可编辑.
配置描述: 对于配置的简要描述
配置方式: 设置服务配置的方式, 包括参数配置和 json 配置. 选择通过参数配置可以通过参数表单进行配置, 选择通过 json 配置可以通过输入 json 文本进行配置.
实例名称: 通过该配置产生的实例的名称, 默认为 "用户昵称" + "服务配置名". 自定义实例名称时, 可以引用平台变量.
实例图标: 通过该配置产生的实例的图标, 用于在前台标识该配置.

服务配置的用户配置包括:
配置信赖: 服务配置之间的依赖关系
自定义属性: 配置的可扩展属性, 用于系统查找特定配置
参数配置: 用户的参数配置是用来发送给服务代理, 规定代理如何完成成集成子系统功能的配置信息. 不同的组件有不同参数配置.

在 [ 服务配置设置 ] 弹窗填写完必填的表单项, 点击 [ 确定 ] 按钮, 可以创建相应的配置.

管理服务配置

通过 [ 服务引擎 ] --> [ 服务配置 ] 页面可以管理服务配置.
服务配置页面显示服务配置的总量信息, 服务配置工作实例排行和服务配置列表.
服务配置列表可以通过分类进行筛选: 服务配置列表左侧是分类筛选栏. 点击 [ 展开 / 折叠 ] 按钮可以展开 / 折叠分类筛选栏. 点击分类筛选栏中的分类, 可以对服务配置列表进行筛选. 服务配置可以通过服务配置的名称进行搜索. 点击 [ 依赖关系图 ] 按钮, 弹出 [ 依赖关系图 ] 弹窗, 在 [ 依赖关系图 ] 可以查看台所有配置的依赖关系. 点击服务配置列表中的服务配置名称, 可以跳转相应服务配置的详情页面.
[ 服务配置详情 ] 页面显示服务配置的基本信息, 包括: 服务配置名称, 服务配置描述, 创建服务配置的代理, 创建服务配置的代理的组件, 创服务配置的代理的组件的版本. 点击 [ 自定义属性 ] 按钮可以展示该服务配置的自定义属性列表. 点击 [ 查看配置 ] 按钮, 可以查看配置的用户配置信息. 点击 [ 查看文档 ] 可以查看创建该配置的服务代理的组件的文档, 通过文档可以显示组件主配置项和用户配置项的基本信息, 包括: 是否必填, 类型, 默认值, 描述. 点击 [ 编辑 ] 按钮, 可以对服务配置进行编辑, 如果该配置有已加入的组, 则只能编辑服务配置的基本信息; 如果该配置没有加入任何服务分组, 则可以编辑服务配置的基本信息和用户配置. 如果服务配置没有加入任何服务分组, [ 服务配置详情 ] 页面显示 [ 删除 ] 按钮, 点击 [ 删除 ] 按钮可以删除该服务配置. 点击 [ clone 配置 ] 可以以当前配置的配置值为模版创建一个新配置.
[ 服务配置详情 ] 页面统计当前服务配置的实例数量, 并显示实例列表.

服务配置的依赖关系

平台的子系统提供给用户的功能可能存在依赖关系, 比如, 项目成员分享项目的存储空间之前, 项目先要分配存储空间. 集成相应子系统功能的代理的配置之间也需要配置依赖关系. 
为服务配置依关赖关系可以产生两方面的效果: 1. 基于依赖关系的校验; 2. 基于依赖关系的数据传递.

基于依赖关系的校验

在通过服务分组为用户分配资源时, 将依赖其他服务配置的服务配置加入组时, 会让用户选择该服务配置所依赖的服务配置加入的组. 通过这种方式, 可以强制用户先为用户分配被依赖的资源. 当被依赖的资源分配成功后, 再为用户分配依赖它的资源. 比如, 将为项目成员分配项目存储空间的服务配置加入服务分组的时候, 系统会要求用户选择为项目分配置存储空间的配置加入组. 这样的校验可以免避免出现分配置资源因为不具备必要的前提条件而失败.

基于依赖关系的数据传递

用户在配置需要依赖其他服务配置的服务配置时, 所填写的用户配置项可能需要引用被依赖的配置项的输出. 通过配置依赖关系, 可以引用被依赖的服务配置的输出数据. 在设置依赖关系时, 可以设置被依赖配置的名称, 在引用被依赖配置的输出时，通过 {{ [ 被依赖配置名 ].[ 输出数据的变量名 ] }} 进行引用.






















